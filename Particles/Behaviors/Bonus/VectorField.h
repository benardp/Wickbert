//@file VectorField.h
//@author Generated by PSL


#ifndef VectorField_H
#define VectorField_H

#include "Particles.h"
#include "ParticleBehavior.h"

class VectorField: public ParticleBehavior
{
public:
	// size of array cannot change after initilization for now
	int gridSize;
	// data min and max corner
	gmVector3 minCorner, maxCorner, boxSize, stepSize;

	// 3d grids box of vector data
	// use static size data for now because it is fast
	gmVector3 data[32][32][32];

	MAKE_PARTICLESTUFF_NAME();

	// parameters
	double scaler;

	// parameter function calls
	int qlen();
	void getq(double *q);
	void setq(double *q);
	void qname(char **qn);


	// perparticle parameter function calls
	// just returns the vectorField at the curent location
	int qlenpp();
	void getqpp(double *q, int i);
	void setqpp(double *q, int i);
	void qnamepp(char **qn);

	// constuctor
	VectorField(Particles *ps=NULL);

	// apply the force in one step
	void applyForce();

	// return the force at a location
	gmVector3 getVector(const gmVector3 &position);

	void readData(std::string filename);
};
#endif
